
@model SUC_DataEntity.SUC_UavInfo
@{
    ViewBag.Title = "Form";
    Layout = "~/Views/Shared/_Index.cshtml";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Index</title>
    <script type="text/javascript" src="http://api.map.baidu.com/api?v=2.0&ak=ZAAxXEex1RGOosDj5IFIY0bbeuWGmaAF"></script>
    <script src="~/assets/js/DistanceTool_min.js"></script>
    <link href="~/assets/css/mapstyle.css" rel="stylesheet" />
 
    <style>
        em {
            font-style: normal;
            color: black;
        }
    </style>


</head>
<body>
    <div>
        <input type="hidden" id="UavInfoId" value="@Model.UavInfoId " />
        <input type="hidden" id="longitude" value="@Model.Longitude " />
        <input type="hidden" id="latitude" value="@Model.Latitude " />
        <input type="hidden" id="lastlongitude" value="@ViewData["lastlongitude"]" />
        <input type="hidden" id="lastlatitude" value="@ViewData["lastlatitude"]" />
        <input type="hidden" id="sortie" value="@ViewData["sortie"] " />
        <input type="hidden" id="uavSerialNO" value="@ViewData["uavSerialNO"] " />


        <div id="mouselng" style="visibility:hidden"></div>
        <div id="mouselat" style="visibility:hidden"></div>
        <div style="width:125em;height:70em;border:1px solid gray" id="container">
        </div>

        <div id="allmap">
        </div>


    </div>
</body>
</html>
<script type="text/javascript">


    var map = new BMap.Map("container",{ mapType: BMAP_HYBRID_MAP });
    map.centerAndZoom(new BMap.Point(108.286157,25.865544), 12);
    map.addControl(new BMap.ScaleControl()); //添加比例尺控件(左下角显示的比例尺控件)
    map.addControl(new BMap.OverviewMapControl());// 缩略图控件
    var ctrl_nav = new BMap.NavigationControl({ anchor: BMAP_ANCHOR_TOP_LEFT, type: BMAP_NAVIGATION_CONTROL_LARGE });
    map.addControl(ctrl_nav);//添加标准地图控件(左上角的放大缩小左右拖拽控件)

    map.enableDragging(); //启用地图拖拽事件，默认启用(可不写)
    map.enableScrollWheelZoom(); //启用地图滚轮放大缩小
    map.enableDoubleClickZoom(); //启用鼠标双击放大，默认启用(可不写)
    map.enableKeyboard(); //启用键盘上下左右键移动地图
    map.enableContinuousZoom();   // 开启连续缩放效果
    map.enableInertialDragging(); // 开启惯性拖拽效果

    //添加地图类型控件
    map.addControl(new BMap.MapTypeControl({
        mapTypes: [
            BMAP_NORMAL_MAP,
            BMAP_HYBRID_MAP
        ]
    }));

    //实时显示地图坐标 strat
    map.addEventListener("mousemove", GetlngAndlat);
    var lastlongitude = $("#lastlongitude").val();
    var lastlatitude = $("#lastlatitude").val();
    var llPoint = new BMap.Point(lastlongitude, lastlatitude);
    map.panTo(llPoint);



    //单击获取点击的经纬度
    //map.addEventListener("click", function (e) {
    //    alert(e.point.lng + "," + e.point.lat);
    //});
    function GetlngAndlat(e) {
        if (e.point.lng != null) {
            document.getElementById("mouselng").innerHTML = e.point.lng;
            document.getElementById("mouselat").innerHTML = e.point.lat;
        }
    }
    //实时显示地图坐标 end

    //测量距离 strat
    function openGetDistance() {
        var myDis = new BMapLib.DistanceTool(map);//map为上面已经初始化好的地图实例
        myDis.open();
    }
    //测量距离 end


    //左右击鼠标给地图上放marker strat 放标注
    var marker_num = 0;
    var isAddListen = -1;
    function PutInMarker() {
        //右键标记
        if (isAddListen == -1) {
            //k添加右键点击的监听事件
            map.addEventListener("rightclick", putmarker);
            isAddListen = 0;
        }
    }

    var g_rightP = new BMap.Point(0, 0);
    function putmarker(e) {
        //放标注
        var p1 = new BMap.Point(e.point.lng, e.point.lat);
        g_rightP = p1;
        var myIcon = new BMap.Icon("/assets/images/Baidu/car.png", new BMap.Size(24, 24));
        var marker = new BMap.Marker(p1, { icon: myIcon });  // 创建标注
        map.addOverlay(marker);              // 将标注添加到地图中

        marker_num++;//标注索引，这个是个全局变量
        var whichCar = window.external.setWhichCar(marker_num);
        var label = new BMap.Label(whichCar + "号-坐标" + marker_num + ":" +
        "(" + e.point.lng + "," + e.point.lat + ")", { offset: new BMap.Size(20, -10) });
        marker.setLabel(label);
    }
    //左右击鼠标给地图上放marker end


    //清除所有标注 start
    function ClearAllMarkers() {
        map.clearOverlays();
        marker_num = 0;
        isAddListen = -1;
    }
    //清除所有标注 end



    //关闭监听事件，恢复对地图的操作 start
    function CloseListener() {
        map.removeEventListener("rightclick", putmarker);
    }
    //关闭监听事件，恢复对地图的操作 end

    //坐标反查 start
    function FindPosition(CurLng, CurLat) {
        //百度地图API功能，经度，纬度
        var point = new BMap.Point(CurLng, CurLat);
        map.centerAndZoom(point, 20);
    }
    //坐标反查 end




    //var Lng = 116.380960
    //var Lat = 39.913280
    //function GetTestGPS(CurLng, CurLat) {
    //    //百度地图API功能，经度，纬度
    //    var point = new BMap.Point(CurLng, CurLat);
    //    map.centerAndZoom(point, 20);
    //    window.external.LocateInfo(text);
    //    return Lng;
    //}
    //获取测试坐标 end

    //获取测试坐标数组2 start
    function GetTest2GPS() {
        var text = '{"Point":[{"x":"116.380960","y":"39.913280"},{"x":"116.380961","y":"39.913281"},{"x":"116.380962","y":"39.913282"},{"x":"116.380963","y":"39.913283"}]}'
        window.external.LocateInfo(text);
        return text;
    }


//根据架次信息获取经纬度信息
    function theFlight() {
       var Sortie = $("#sortie").val();
       var UavSerialNO = $("#uavSerialNO").val();
       var opts = {
           width:0, // 信息窗口宽度
           height:0, // 信息窗口高度
           title: "飞行信息", // 信息窗口标题
           enableMessage: true, //设置允许信息窗发送短息
           message: ""
       }

        $.ajax({
            url: "/Baidu/GetSortiePointData",
            data: {UavSerialNO: UavSerialNO,Sortie: Sortie },
            dataType: 'json',
            type: "Get",
            success: function (data) {
                if (data.IsSuccess) {
                    if (data.ResultValue != null) {
                        $.each(data.ResultValue, function (index, element) {

                            var myIcon2 = new BMap.Icon("/assets/images/Baidu/RedPoint.png", new BMap.Size(18, 14));//这个是你要显示坐标的图片的相对路径
                            var ggPoint = new BMap.Point(element.Longitude, element.Latitude);
                            var marker2 = new BMap.Marker(ggPoint, { icon: myIcon2 });
                            map.addOverlay(marker2);

                            var infoWindow = new BMap.InfoWindow("高度:" + element.Altitude + "<br>经度:" + element.Longitude + "<br>纬度:" + element.Latitude, opts); // 创建信息窗口对象
                            map.openInfoWindow(infoWindow, ggPoint); //开启信息窗口


                        });
                    }
                }
            }
        });
    }
   theFlight();







</script>